.popup {
  height: 100vh; 
  width: 100vw;
  position: fixed;
  top: 0;
  left: 0;
  background-color: rgba($color-black, .8);
  z-index: 9999;
  //this is how we hide something if we also want to animate it. We can't use display none cuz then we can't animate it
  opacity: 0;
  visibility: hidden;
  transition: all .3s;

  &__content {
    @include absCenter;
    width: 75%;
    background-color: $color-white;
    box-shadow: 0 2rem 4rem rgba($color-black, .2);
    border-radius: $default-border-radius;
    // set the parent element to table
    display: table;
    //to prevent the image overflowing the box and wrecking the border radius
    overflow: hidden;
    opacity: 0;
    //this repeats what's in our mixin, but we can't have more than one transform. Since this is the last one that appears in the declaration block, this is the one that gets applied
    transform: translate(-50%, -50%) scale(.5);
    //so that it grows on click
    //the .2s is a transition delay
    transition: all .4s .2s;
  }

  &__left {
    width: 33.333333%;
    // set the children to table-cell. The browser will then automatically give them the same height
    display: table-cell;
  }

  &__right {
    width: 66.6666667%;
    display: table-cell;
    //this is a property we can use on table / table cell elements
    vertical-align: middle;
    padding: 3rem 5rem;
  }

  &__img {
    display: block;
    width: 100%;
  }

  &__text {
    font-size: 1.4rem;
    margin-bottom: 4rem;

    //prefixes. normally don't add these yourself, but we are for learning purposes
    -moz-column-count: 2;
    -moz-column-gap: 4rem;
    -moz-column-rule: 1px solid $color-grey-light-2;

    //this will automatically give us 2 columns
    column-count: 2;
    //default is 1em (which is the font size of the current element)
    column-gap: 4rem;
    //this is a border between columns
    column-rule: 1px solid $color-grey-light-2;
    // this will automatically hyphenate words. Must have <html lang="en"> in the markup for this to work
    -moz-hyphens: auto;
    -ms-hyphens: auto;
    -webkit-hyphens: auto;
    hyphens: auto;
  }

    // because we have anchor tags targeting this element, we can use this selector to be applied when this element is targeted
    &:target {
      opacity: 1;
      visibility: visible;
    }

    //styling the content when the popup becomes the target
    &:target &__content {
      opacity: 1;
      transform: translate(-50%, -50%) scale(1);
    }
  
    &__close {
      &:link,
      &:visited {
        color: $color-grey-dark;
        position: absolute;
        top: 2.5rem;
        right: 2.5rem;
        font-size: 3rem;
        text-decoration: none;
        display: inline-block;
        transition: all .2s;
        //not really sure why but it's to do with the positioning of the X because it
        line-height: 1;
  
        &:hover {
          color: $color-primary;
        }
      }
    }
}
