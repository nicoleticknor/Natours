.row {
  //max-width will resize responsively. if the max width isn't available, it will fill the size available
  max-width: $grid-width;
  margin: 0 auto;

  // "not" pseudo class selects everything except the last-child
  &:not(:last-child) {
    margin-bottom: $gutter-vertical;
  }

  @include clearfix;

  //attribute selector with ^= means that it selects all elements where the class attribute starts with "col-"
  //*= is to select all classes that contains that. =^ is things that end in stuff
  [class^="col-"] {
    //no idea why this does what it does
    float: left;
    
    // gutters are on the right margin except for the last one
    &:not(:last-child) {
      margin-right: $gutter-horizontal;
    }
  }

  .col-1-of-2 {
    //you can mix units within the calc function (this is not native CSS; calc is a Sass thing)
    //need the #{$variable} #{} wrapping around a sass variable
    width: calc((100% - #{$gutter-horizontal}) / 2);
  }
}

.col-1-of-3 {
  width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
}

.col-2-of-3 {
  width: calc(2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal})

}

.col-1-of-4 {
  width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
}

.col-2-of-4 {
  width: calc(2 *((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal})
}

.col-3-of-4 {
  width: calc(3 *((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal})
}
