/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

html {
  font-size: 62.5%;
}

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /* font-size: 16px; */
  line-height: 1.7;
  color: #777;
  padding: 3rem;
  box-sizing: border-box;
}

.header {
  position: relative;
  height: 95vh;
  background-image: linear-gradient(
    to right bottom, 
  hsla(111, 55%, 64%, 0.803), 
  hsla(160, 64%, 43%, 0.797)), 
  url(../img/hero.jpg);
  /*so that the background image adjusts when we resize the window*/
  background-size: cover;
  /*ensures the top of the image stays at the top of the container when we resize
  it will crop from the bottom. 
  There's also bottom and center*/
  background-position: top;
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}

.header__logo-box {
  /*positioned against header parent*/
  position: absolute;
  top: 4rem;
  left: 4rem;

}

.header__logo {
  height: 3.5rem;
}

.header__text-box {
  position: absolute;
  /*this will place the top left corner 40% down and 50% to the left w/in the parent*/
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
}

.heading-primary {
  color: #fff;
  text-transform: uppercase;

  /*determines whether the back of the element is visible. Useful for things that rotate etc
  but in this case it's a hack to prevent a weird shakey thing in browsers that no one understands*/
  backface-visibility: hidden;
  margin-bottom: 6rem;
}

.heading-primary--main {
  display: block;
  font-size: 6rem;
  font-weight: 400;
  letter-spacing: 3.5rem;
  animation-name: moveInLeft;
  animation-duration: 1s;
  animation-timing-function: ease-out;

  /* other optional animation properties:
  animation-iteration-count: 3;
  animation-timing-function: ease-out;
  animation-delay: 3s;
  */
}

.heading-primary--sub {
  display: block;
  font-size: 2rem;
  font-weight: 700;
  letter-spacing: 1.7rem;
  animation: moveInRight 1s ease-out;
}

/*for browser performance, only animate opacity and transform properties*/
@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem);
  }

  /* rotating is hilarious:
  60% {
    transform: rotate(180deg);
  }
  */

  80% {
    transform: translateX(1rem);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem);
  }

  80% {
    transform: translateX(-1rem);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(5rem);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

/*link is a state that the btn can have*/
.btn:link, 
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  display: inline-block;
  border-radius: 10rem;
  transition: all .2s;
  /*this is the parent of the after element so it's position relative*/
  position: relative;
}

.btn:hover {
  transform: translateY(-0.3rem);
  /*x, y, blur, rgba*/
  box-shadow: 0 1rem 2rem rgba(0,0,0,.2);
}

.btn:active {
  transform: translateY(-.1rem);
  box-shadow: 0 .5rem 1rem rgba(0,0,0,.2);
}

.btn--white {
  background-color: #fff;
  color: #777;
}

/* after is a span that appears immediately after in the markup*/
.btn::after {
  /*need content otherwise it won't appear*/
  content: '';
  display: inline-block;
  /*h and w are 100% of the parent element (the btn)*/
  height: 100%;
  width: 100%;
  border-radius: 10rem;
  position: absolute;
  top: 0;
  left: 0;
  /*this will guarantee that it's behind the parent*/
  z-index: -1;
  /*put this on the parent to apply it to all children*/
  transition: all .4s;
}

.btn--white::after {
  background-color: #fff;
}

/*this after pseudo element happens only on hover*/
.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0;
}

.btn--animated {
  animation: moveInBottom .5s ease-out .75s;
  /*automatically applies the animation styles at 0%
  This makes the button hidden before the animation happens*/
  animation-fill-mode: backwards;
}
